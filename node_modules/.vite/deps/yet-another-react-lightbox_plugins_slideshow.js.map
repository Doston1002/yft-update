{
  "version": 3,
  "sources": ["../../yet-another-react-lightbox/dist/plugins/slideshow/Slideshow.js", "../../yet-another-react-lightbox/dist/plugins/slideshow/SlideshowContext.js", "../../yet-another-react-lightbox/dist/plugins/slideshow/SlideshowButton.js", "../../yet-another-react-lightbox/dist/plugins/slideshow/index.js"],
  "sourcesContent": ["import * as React from \"react\";\nimport { createModule, MODULE_CONTROLLER, PLUGIN_SLIDESHOW } from \"../../core/index.js\";\nimport { SlideshowContextProvider } from \"./SlideshowContext.js\";\nimport { SlideshowButton } from \"./SlideshowButton.js\";\nexport const defaultSlideshowProps = {\n    autoplay: false,\n    delay: 3000,\n};\nexport const Slideshow = ({ augment, append }) => {\n    augment(({ slideshow: slideshowProps, toolbar: { buttons, ...restToolbar }, ...restProps }) => ({\n        toolbar: { buttons: [React.createElement(SlideshowButton, { key: PLUGIN_SLIDESHOW }), ...buttons], ...restToolbar },\n        slideshow: { ...defaultSlideshowProps, ...slideshowProps },\n        ...restProps,\n    }));\n    append(MODULE_CONTROLLER, createModule(PLUGIN_SLIDESHOW, SlideshowContextProvider));\n};\n", "import * as React from \"react\";\nimport { ACTION_NEXT, ACTIVE_SLIDE_COMPLETE, ACTIVE_SLIDE_ERROR, ACTIVE_SLIDE_LOADING, ACTIVE_SLIDE_PLAYING, cleanup, makeUseContext, SLIDE_STATUS_COMPLETE, SLIDE_STATUS_ERROR, SLIDE_STATUS_LOADING, SLIDE_STATUS_PLAYING, useEventCallback, useEvents, useLightboxState, useTimeouts, } from \"../../core/index.js\";\nimport { defaultSlideshowProps } from \"./Slideshow.js\";\nconst SlideshowContext = React.createContext(null);\nexport const useSlideshow = makeUseContext(\"useSlideshow\", \"SlideshowContext\", SlideshowContext);\nexport function SlideshowContextProvider({ slides, slideshow, carousel: { finite }, children }) {\n    const { autoplay, delay } = { ...defaultSlideshowProps, ...slideshow };\n    const [playing, setPlaying] = React.useState(autoplay);\n    const scheduler = React.useRef();\n    const slideStatus = React.useRef();\n    const { currentIndex } = useLightboxState().state;\n    const { setTimeout, clearTimeout } = useTimeouts();\n    const { publish, subscribe } = useEvents();\n    const disabled = slides.length === 0 || (finite && currentIndex === slides.length - 1);\n    const togglePlaying = React.useCallback(() => {\n        setPlaying((prev) => !prev);\n    }, []);\n    const cancelScheduler = React.useCallback(() => {\n        clearTimeout(scheduler.current);\n        scheduler.current = undefined;\n    }, [clearTimeout]);\n    const scheduleNextSlide = useEventCallback(() => {\n        cancelScheduler();\n        if (!playing ||\n            disabled ||\n            slideStatus.current === SLIDE_STATUS_LOADING ||\n            slideStatus.current === SLIDE_STATUS_PLAYING) {\n            return;\n        }\n        scheduler.current = setTimeout(() => {\n            if (playing) {\n                slideStatus.current = undefined;\n                publish(ACTION_NEXT);\n            }\n        }, delay);\n    });\n    React.useEffect(scheduleNextSlide, [currentIndex, playing, scheduleNextSlide]);\n    React.useEffect(() => {\n        if (playing && disabled) {\n            setPlaying(false);\n        }\n    }, [currentIndex, playing, disabled]);\n    React.useEffect(() => cleanup(cancelScheduler, subscribe(ACTIVE_SLIDE_LOADING, () => {\n        slideStatus.current = SLIDE_STATUS_LOADING;\n        cancelScheduler();\n    }), subscribe(ACTIVE_SLIDE_PLAYING, () => {\n        slideStatus.current = SLIDE_STATUS_PLAYING;\n        cancelScheduler();\n    }), subscribe(ACTIVE_SLIDE_ERROR, () => {\n        slideStatus.current = SLIDE_STATUS_ERROR;\n        scheduleNextSlide();\n    }), subscribe(ACTIVE_SLIDE_COMPLETE, () => {\n        slideStatus.current = SLIDE_STATUS_COMPLETE;\n        scheduleNextSlide();\n    })), [subscribe, cancelScheduler, scheduleNextSlide]);\n    const context = React.useMemo(() => ({ playing, disabled, togglePlaying }), [playing, disabled, togglePlaying]);\n    return React.createElement(SlideshowContext.Provider, { value: context }, children);\n}\n", "import * as React from \"react\";\nimport { createIcon, IconButton, label, useController, useLoseFocus } from \"../../core/index.js\";\nimport { useSlideshow } from \"./SlideshowContext.js\";\nconst PlayIcon = createIcon(\"Play\", React.createElement(\"path\", { d: \"M8 5v14l11-7z\" }));\nconst PauseIcon = createIcon(\"Pause\", React.createElement(\"path\", { d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" }));\nexport function SlideshowButton() {\n    const { playing, disabled, togglePlaying } = useSlideshow();\n    const { getLightboxProps } = useController();\n    const { render, labels } = getLightboxProps();\n    const focusListeners = useLoseFocus(disabled);\n    return render.buttonSlideshow ? (React.createElement(React.Fragment, null, render.buttonSlideshow({ playing, togglePlaying, disabled }))) : (React.createElement(IconButton, { label: playing ? label(labels, \"Pause\") : label(labels, \"Play\"), icon: playing ? PauseIcon : PlayIcon, renderIcon: playing ? render.iconSlideshowPause : render.iconSlideshowPlay, onClick: togglePlaying, disabled: disabled, ...focusListeners }));\n}\n", "import { Slideshow } from \"./Slideshow.js\";\nexport default Slideshow;\n"],
  "mappings": "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",
  "names": ["React", "React"]
}
